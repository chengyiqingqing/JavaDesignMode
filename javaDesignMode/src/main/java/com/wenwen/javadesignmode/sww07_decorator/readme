1.什么是装饰者模式；
    装饰模式又叫做包装模式。通过一种对客户端透明的方式来“扩展对象的功能”。
    是继承关系的一个替代方案。

2.装饰者模式的结构：
       Component(目标组件，要装饰的对象，定义为接口，定义基本功能)
       ConcreteComponent（实现Component）(具体组件，实现基本的功能)；

       ComponentDecorator(实现Component)就是对目标组件的装饰者，就是为目标组件添加功能
                        为抽象类持有目标组件对象，并给子类继承；
       ConcreteComponentDecorator(继承ComponentDecorator)就是具体要为目标对象添加的功能。

       本例的类的关系
            Car为Component ;
            RunCar为ConcreteComponent;
            CarDecorator为Car的抽象装饰者；
            FlyCarDecorator和SwimCarDecorator为CarDecorator的子类含有具体要添加的功能；

3.再以专业的角度：说装饰者模式的角色和职责
    （1）抽象组件角色： 一个抽象接口，是被装饰类和装饰类的父接口。
    （2）具体组件角色：为抽象组件的实现类。
    （3）抽象装饰角色：包含一个组件的引用，并定义了与抽象组件一致的接口。
    （4）具体装饰角色：为抽象装饰角色的实现类。负责具体的装饰。


