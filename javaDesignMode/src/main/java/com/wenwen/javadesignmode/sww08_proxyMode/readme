1.什么是代理模式

        Proxy模式又叫做代理模式，是构造型的设计模式之一，它可以为其他对象提供一种代理（Proxy）以
    控制对这个对象的访问。

        所谓代理，是指具有与代理元（被代理的对象）具有相同的接口的类，客户端必须通过代理与被代理的目标
    类交互，而代理一般在交互的过程中（交互前后），进行某些特别的处理。

          出版社：生产书        （被代理）
          书店：不生产书，但是卖书。（代理：代理做了些什么事儿呢？它在行驶被代理主题功能的时候
                        可以添加一些附加条件。如：原价上加价，买多了送你代金券，打折，捆绑销售等等增加策略）

2.代理角色和职责：
    subject 抽象主题角色；
        真实主题与代理主题的共同接口。
    RealSubject (真实主题角色)
        定义了代理角色所代表的真实对象。
    Proxy(代理主题角色)
        含有对真实主题角色的引用，代理角色通常在将客户端调用传递给真实主题对象之前或之后执行某些操作，
        而不是单纯返回真实对象。

3.接口
    1. 实现InvocationHandler 接口
            重写invoke方法（method,args）
                Subject newSubject=method.invoke(subject,args);
                return newSubject;

    2. 返回代理对象=Proxy.newProxyInstance(被代理对象的classloader,被代理对象的interfaces，this);
        代理对象.方法（）;调用哪个方法，就通过反射调用哪个方法

